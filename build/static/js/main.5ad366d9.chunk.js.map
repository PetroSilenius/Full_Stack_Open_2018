{"version":3,"sources":["components/Person.js","components/List.js","components/services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["Person","_ref","person","removePerson","react_default","a","createElement","name","number","id","onClick","List","persons","searchName","filter","toUpperCase","indexOf","map","components_Person","key","baseUrl","services_persons","getAll","axios","get","then","response","data","create","newObject","post","concat","update","put","remove","delete","Notification","message","className","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNameChange","event","console","log","target","value","setState","newName","handleNumberChange","newNumber","handleSearchChange","addPerson","preventDefault","personObject","state","forEach","find","p","window","confirm","personService","setTimeout","getAttribute","components_Notification","onChange","onSubmit","type","components_List","_this2","React","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5ad366d9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person = ({ person, removePerson }) => {\r\n    return (\r\n        <div>\r\n            <li>{person.name} {person.number}\r\n            <button name={person.name} id={person.id} onClick={removePerson}>Poista</button></li>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Person","import Person from \"./Person\";\r\nimport React from \"react\"\r\n\r\n\r\nconst List = ({persons, searchName, removePerson}) => {\r\n    return (\r\n    persons\r\n        .filter((person) => person.name.toUpperCase().indexOf(searchName.toUpperCase()) !== -1)\r\n        .map(person => <Person key={person.name} person={person} removePerson={removePerson}/>)\r\n    )\r\n}\r\n\r\nexport default List","import axios from 'axios'\r\nconst baseUrl = 'https://puhelinluettelo-petro.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(`${baseUrl}`,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"message\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react';\r\nimport List from './List'\r\nimport personService from './services/persons'\r\nimport Notification from './Notification'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            persons: [],\r\n            newName: '',\r\n            newNumber: '',\r\n            searchName: '',\r\n            message: null,\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Puhelinluettelo</h2>\r\n                <Notification message={this.state.message}/>\r\n                Rajaa näytettäviä: <input value = {this.state.searchName} onChange={this.handleSearchChange}/>\r\n                <h4> Lisää uusi </h4>\r\n                <form onSubmit={this.addPerson}>\r\n                    <div>\r\n                        nimi: <input value={this.state.newName} onChange={this.handleNameChange}/>\r\n                    </div>\r\n                    <div>\r\n                        numero : <input value={this.state.newNumber} onChange={this.handleNumberChange}/>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">lisää</button>\r\n                    </div>\r\n                </form>\r\n                <h2>Numerot</h2>\r\n                <List persons={this.state.persons} searchName={this.state.searchName} removePerson={this.removePerson}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('did mount')\r\n        personService\r\n            .getAll()\r\n            .then(response => {\r\n                console.log('promise fulfilled')\r\n                this.setState({persons: response})\r\n            })\r\n    }\r\n\r\n    handleNameChange = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({newName: event.target.value})\r\n    }\r\n\r\n    handleNumberChange = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({newNumber: event.target.value})\r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({searchName: event.target.value})\r\n    }\r\n\r\n    addPerson = (event) => {\r\n        event.preventDefault()\r\n        const personObject = {\r\n            name: this.state.newName,\r\n            number: this.state.newNumber\r\n        }\r\n\r\n        let id = -1\r\n        this.state.persons.forEach(person => person.name === personObject.name ? id = person.id : 0)\r\n\r\n        if(this.state.persons.find(p => p.name === this.state.newName )){\r\n            if(window.confirm(`${this.state.newName} on jo luettelossa, korvataanko vanha numero uudella?`)){\r\n                personService\r\n                    .update(id, personObject)\r\n                    .then(response =>{\r\n                        this.setState({\r\n                            persons: this.state.persons.concat(response),\r\n                            message: `Muutettiin ${response.name} tietoja`\r\n                        })\r\n                        setTimeout(() => {\r\n                            this.setState({message: null})\r\n                        }, 2000)\r\n                    })\r\n                    \r\n            }\r\n            return\r\n        }\r\n        personService\r\n            .create(personObject)\r\n            .then(response => {\r\n                this.setState({\r\n                    persons: this.state.persons.concat(response),\r\n                    message: `Lisättiin ${response.name}`\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({message: null})\r\n                }, 2000)\r\n            })\r\n\r\n\r\n        this.setState({\r\n            newName: '',\r\n            newNumber: ''\r\n        })\r\n    }\r\n\r\n    removePerson = (event) => {\r\n        const id = event.target.getAttribute('id')\r\n        const name = event.target.getAttribute('name')\r\n\r\n        if(window.confirm(`Poistetaanko ${name}?`)){\r\n            personService\r\n                .remove(id)\r\n\r\n            this.setState({\r\n                persons: this.state.persons.filter(person => person.id !== id),\r\n                message: `Poistettiin ${name}`\r\n            })\r\n            setTimeout(() => {\r\n                this.setState({message: null})\r\n            }, 2000)\r\n        }\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}